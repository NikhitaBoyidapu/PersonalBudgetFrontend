{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bnikh\\\\Desktop\\\\UNCC\\\\NBAD\\\\Project\\\\personal-budget-project\\\\src\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('jwt');\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  function decodingJWT(token) {\n    try {\n      const base64payload = token.split('.')[1].replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(atob(base64payload).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      return JSON.parse(jsonPayload);\n    } catch (error) {\n      console.error('Error decoding JWT token:', error);\n      return {};\n    }\n  }\n  useEffect(() => {\n    console.log('LoginPage - Initial Authenticated:', localStorage.getItem('jwt'));\n    const existingToken = localStorage.getItem('jwt');\n    if (existingToken) {\n      const decodedToken = decodingJWT(existingToken);\n      const issuedAt = decodedToken.iat;\n      const expiresIn = decodedToken.exp - issuedAt;\n      console.log('LoginPage - expiresIn:', expiresIn);\n      const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n      console.log('currentTimeInSeconds::', currentTimeInSeconds);\n      // Show a warning popup 20 seconds before the token expires\n      const warningTime = expiresIn - 20;\n      const warningTimeout = setTimeout(() => {\n        const userResponse = window.confirm('Your session will expire in 20 seconds. Do you want to continue?');\n        if (!userResponse || currentTimeInSeconds - issuedAt > expiresIn) {\n          // User clicked 'Cancel', logout the user\n\n          localStorage.removeItem('jwt');\n          localStorage.removeItem('username');\n          window.location.reload();\n        }\n      }, warningTime * 1000);\n\n      // Clear the warning timeout when the component unmounts\n      return () => clearTimeout(warningTimeout);\n    }\n  }, []);\n  const options = months.map(month => ({\n    label: month,\n    value: month.toLowerCase() // using lowercase for consistency\n  }));\n\n  const [selectedMonth, setSelectedMonth] = React.useState('');\n  const handleChange = event => {\n    setSelectedMonth(event.target.value);\n  };\n  const [dataSource, setDataSource] = useState({\n    datasets: [{\n      data: [],\n      backgroundColor: [],\n      expense: [],\n      month: []\n    }],\n    labels: []\n  });\n  const createChart = () => {\n    const ctx = document.getElementById('myChart').getContext('2d');\n    const filteredExpenses = dataSource.datasets[0].expense.filter((expense, index) => dataSource.datasets[0].month[index] === selectedMonth);\n    const filteredBudget = dataSource.datasets[0].budget.filter((budget, index) => dataSource.datasets[0].month[index] === selectedMonth);\n    const filteredLabels = dataSource.labels.filter((_, index) => dataSource.datasets[0].month[index] === selectedMonth);\n    if (filteredExpenses.length === 0) {\n      // If no expenses for the selected month, display a message\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: filteredLabels,\n          datasets: [{\n            label: 'Total Budget',\n            data: filteredBudget,\n            backgroundColor: 'rgba(0, 0, 139, 0.65)',\n            borderWidth: 1\n          }, {\n            label: 'Expense',\n            data: filteredExpenses,\n            backgroundColor: 'rgba(255, 99, 132, 0.6)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              display: false\n            }\n          }\n        }\n      });\n    }\n    ;\n  };\n  const createPieChart = () => {\n    const ctx = document.getElementById('chart2').getContext('2d');\n\n    // Check if a chart instance already exists and destroy it\n    const existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    const filteredData = dataSource.datasets[0].expense.filter((expense, index) => dataSource.datasets[0].month[index] === selectedMonth);\n    const filteredLabels = dataSource.labels.filter((_, index) => dataSource.datasets[0].month[index] === selectedMonth);\n    const filteredColors = dataSource.datasets[0].backgroundColor.filter((_, index) => dataSource.datasets[0].month[index] === selectedMonth);\n    if (filteredData.length === 0) {\n      // If no expenses for the selected month, display a message\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      // If there are expenses, create the pie chart\n      new Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: filteredLabels,\n          datasets: [{\n            data: filteredData,\n            backgroundColor: filteredColors,\n            // Use colors from the database\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          legend: {\n            position: 'right'\n          }\n        }\n      });\n    }\n  };\n  const createStackedLineChart = () => {\n    const ctx = document.getElementById('chart3').getContext('2d');\n    const existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    } else {\n      if (dataSource.datasets[0].data.length === 0) {\n        // If no expenses for the selected month, display a message\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.font = '20px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n      } else {\n        const amountDifference = dataSource.datasets[0].data.map((budget, index) => {\n          const expenses = dataSource.datasets[0].expense[index];\n          return budget - expenses;\n        });\n        new Chart(ctx, {\n          type: 'line',\n          data: {\n            labels: dataSource.labels,\n            datasets: [{\n              label: 'Budget',\n              data: dataSource.datasets[0].data,\n              borderColor: 'rgba(0, 255, 0, 0.8)',\n              backgroundColor: 'rgba(0, 255, 0, 0.2)',\n              borderWidth: 2,\n              fill: 'origin'\n            }, {\n              label: 'Expenses',\n              data: dataSource.datasets[0].expense,\n              borderColor: 'rgba(255, 0, 0, 0.8)',\n              backgroundColor: 'rgba(255, 0, 0, 0.2)',\n              borderWidth: 2,\n              fill: '-1'\n            }, {\n              label: 'Amount Difference',\n              data: amountDifference,\n              borderColor: 'rgba(0, 0, 255, 0.8)',\n              backgroundColor: 'rgba(0, 0, 255, 0.2)',\n              borderWidth: 2,\n              fill: '-1'\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              x: {\n                display: true,\n                title: {\n                  display: true,\n                  text: 'Months'\n                }\n              },\n              y: {\n                display: true,\n                title: {\n                  display: true,\n                  text: 'Amount'\n                }\n              }\n            }\n          }\n        });\n      }\n      ;\n    }\n    ;\n  };\n  useEffect(() => {\n    createPieChart(); // Call the pie chart creation function\n  }, [selectedMonth, dataSource]);\n  const getBudget = () => {\n    axios.get(`http://localhost:3000/api/budget/${username}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(function (res) {\n      console.log(res.data);\n      for (var i = 0; i < res.data.length; i++) {\n        dataSource.datasets[0].data[i] = res.data[i].budget;\n        dataSource.labels[i] = res.data[i].title;\n        dataSource.datasets[0].backgroundColor[i] = res.data[i].color;\n        dataSource.datasets[0].expense[i] = res.data[i].expense;\n        dataSource.datasets[0].month[i] = res.data[i].month;\n      }\n      createChart();\n      createStackedLineChart();\n    }).catch(function (error) {\n      console.error('Error fetching budget data:', error);\n    });\n  };\n  useEffect(() => {\n    getBudget();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dash-head\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-head\",\n        children: [\"Welcome to \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [username, \"'s \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 53\n        }, this), \"Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/newcategory\",\n        className: \"create-category\",\n        children: \"Add new categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"logout-link\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"charts\",\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"chart chart1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Budget and Expenses based on Category for \", selectedMonth]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedMonth,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: '',\n              disabled: true,\n              hidden: true,\n              children: \"Select a month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 11\n            }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 13\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"myChart\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"chart chart2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"All the expenses for \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: selectedMonth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 30\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedMonth,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: '',\n                disabled: true,\n                hidden: true,\n                children: \"Select a month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 11\n              }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 13\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              id: \"chart2\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"chart chart3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Line chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"chart3\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 7\n  }, this);\n}\n_s(Dashboard, \"FK/ZNCnAoiig0rV+aD7wRqOTWt4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","Chart","jsxDEV","_jsxDEV","Dashboard","_s","username","localStorage","getItem","token","months","decodingJWT","base64payload","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","error","console","log","existingToken","decodedToken","issuedAt","iat","expiresIn","exp","currentTimeInSeconds","Math","floor","Date","now","warningTime","warningTimeout","setTimeout","userResponse","window","confirm","removeItem","location","reload","clearTimeout","options","month","label","value","toLowerCase","selectedMonth","setSelectedMonth","handleChange","event","target","dataSource","setDataSource","datasets","data","backgroundColor","expense","labels","createChart","ctx","document","getElementById","getContext","filteredExpenses","filter","index","filteredBudget","budget","filteredLabels","_","length","clearRect","canvas","width","height","font","textAlign","fillText","type","borderWidth","scales","y","display","createPieChart","existingChart","getChart","destroy","filteredData","filteredColors","responsive","maintainAspectRatio","legend","position","createStackedLineChart","amountDifference","expenses","borderColor","fill","x","title","text","getBudget","get","headers","Authorization","then","res","i","color","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onChange","disabled","hidden","option","id","_c","$RefreshReg$"],"sources":["C:/Users/bnikh/Desktop/UNCC/NBAD/Project/personal-budget-project/src/Dashboard/Dashboard.js"],"sourcesContent":["  import React, { useState, useEffect } from 'react';\r\n  import { Link } from 'react-router-dom';\r\n  import axios from 'axios';\r\n  import Chart from 'chart.js/auto';\r\n\r\n  function Dashboard() {\r\n    const username = localStorage.getItem('username');\r\n    const token = localStorage.getItem('jwt');\r\n    const months = [\r\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\r\n    ];\r\n\r\n    function decodingJWT(token) {\r\n      try {\r\n          const base64payload = (token.split('.')[1]).replace(/-/g, '+').replace(/_/g, '/');\r\n          const jsonPayload = decodeURIComponent(atob(base64payload).split('').map(function(c) {\r\n               return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n          }).join(''));\r\n  \r\n          return JSON.parse(jsonPayload);\r\n          } catch (error) {\r\n              console.error('Error decoding JWT token:', error);\r\n              return {};\r\n          }\r\n      }\r\n      useEffect(() => {\r\n        console.log('LoginPage - Initial Authenticated:', localStorage.getItem('jwt'));\r\n        const existingToken = localStorage.getItem('jwt');\r\n        if (existingToken) {\r\n          const decodedToken = decodingJWT(existingToken);\r\n          const issuedAt = decodedToken.iat; \r\n          const expiresIn = decodedToken.exp - issuedAt;\r\n          console.log('LoginPage - expiresIn:', expiresIn);\r\n          const currentTimeInSeconds = Math.floor(Date.now() / 1000);\r\n          console.log('currentTimeInSeconds::',currentTimeInSeconds);\r\n         // Show a warning popup 20 seconds before the token expires\r\n      const warningTime = expiresIn - 20;\r\n      const warningTimeout = setTimeout(() => {\r\n        const userResponse = window.confirm('Your session will expire in 20 seconds. Do you want to continue?');\r\n\r\n        if (!userResponse || currentTimeInSeconds-issuedAt>expiresIn) {\r\n          // User clicked 'Cancel', logout the user\r\n\r\n          localStorage.removeItem('jwt');\r\n          localStorage.removeItem('username');\r\n          window.location.reload();\r\n        }\r\n      }, warningTime * 1000);\r\n\r\n      // Clear the warning timeout when the component unmounts\r\n      return () => clearTimeout(warningTimeout);\r\n    }\r\n  }, []);\r\n\r\n    const options = months.map((month) => ({\r\n      label: month,\r\n      value: month.toLowerCase(), // using lowercase for consistency\r\n    }));\r\n\r\n    const [selectedMonth, setSelectedMonth] = React.useState('');\r\n\r\n    const handleChange = (event) => {\r\n      setSelectedMonth(event.target.value);\r\n    };\r\n    const [dataSource, setDataSource] = useState({\r\n      datasets: [\r\n        {\r\n          data: [],\r\n          backgroundColor: [],\r\n          expense: [],\r\n          month: [],\r\n        },\r\n      ],\r\n      labels: [],\r\n    });\r\n    const createChart = () => {\r\n      const ctx = document.getElementById('myChart').getContext('2d');\r\n     \r\n      const filteredExpenses = dataSource.datasets[0].expense.filter(\r\n        (expense, index) => dataSource.datasets[0].month[index] === selectedMonth\r\n      );\r\n      const filteredBudget = dataSource.datasets[0].budget.filter(\r\n        (budget, index) => dataSource.datasets[0].month[index] === selectedMonth\r\n      );\r\n      const filteredLabels = dataSource.labels.filter(\r\n        (_, index) => dataSource.datasets[0].month[index] === selectedMonth\r\n      );\r\n    \r\n      if (filteredExpenses.length === 0) {\r\n        // If no expenses for the selected month, display a message\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.font = '20px Arial';\r\n        ctx.textAlign = 'center';\r\n        ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\r\n      } else {\r\n      new Chart(ctx, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: filteredLabels,\r\n          datasets: [\r\n            {\r\n              label: 'Total Budget',\r\n              data: filteredBudget,\r\n              backgroundColor: 'rgba(0, 0, 139, 0.65)',\r\n              borderWidth: 1,\r\n            },\r\n            {\r\n              label: 'Expense',\r\n              data: filteredExpenses,\r\n              backgroundColor: 'rgba(255, 99, 132, 0.6)',\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          scales: {\r\n            y: {\r\n              display: false,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    };\r\n  };\r\n\r\n    const createPieChart = () => {\r\n      const ctx = document.getElementById('chart2').getContext('2d');\r\n    \r\n      // Check if a chart instance already exists and destroy it\r\n      const existingChart = Chart.getChart(ctx);\r\n      if (existingChart) {\r\n        existingChart.destroy();\r\n      }\r\n    \r\n      const filteredData = dataSource.datasets[0].expense.filter(\r\n        (expense, index) => dataSource.datasets[0].month[index] === selectedMonth\r\n      );\r\n      const filteredLabels = dataSource.labels.filter(\r\n        (_, index) => dataSource.datasets[0].month[index] === selectedMonth\r\n      );\r\n      const filteredColors = dataSource.datasets[0].backgroundColor.filter(\r\n        (_, index) => dataSource.datasets[0].month[index] === selectedMonth\r\n      );\r\n    \r\n      if (filteredData.length === 0) {\r\n        // If no expenses for the selected month, display a message\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.font = '20px Arial';\r\n        ctx.textAlign = 'center';\r\n        ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\r\n      } else {\r\n        // If there are expenses, create the pie chart\r\n        new Chart(ctx, {\r\n          type: 'pie',\r\n          data: {\r\n            labels: filteredLabels,\r\n            datasets: [\r\n              {\r\n                data: filteredData,\r\n                backgroundColor: filteredColors, // Use colors from the database\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n              position: 'right',\r\n            },\r\n          },\r\n        });\r\n      }\r\n    };\r\n \r\n    const createStackedLineChart = () => {\r\n      const ctx = document.getElementById('chart3').getContext('2d');\r\n      const existingChart = Chart.getChart(ctx);\r\n      if (existingChart) {\r\n        existingChart.destroy();\r\n      }\r\n     else {\r\n     \r\n      if ((dataSource.datasets[0].data).length === 0) {\r\n        // If no expenses for the selected month, display a message\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.font = '20px Arial';\r\n        ctx.textAlign = 'center';\r\n        ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\r\n      } else {\r\n      const amountDifference = dataSource.datasets[0].data.map((budget, index) => {\r\n        const expenses = dataSource.datasets[0].expense[index];\r\n        return budget - expenses;\r\n      });\r\n    \r\n      new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: dataSource.labels,\r\n          datasets: [\r\n            {\r\n              label: 'Budget',\r\n              data: dataSource.datasets[0].data,\r\n              borderColor: 'rgba(0, 255, 0, 0.8)',\r\n              backgroundColor: 'rgba(0, 255, 0, 0.2)',\r\n              borderWidth: 2,\r\n              fill: 'origin',\r\n            },\r\n            {\r\n              label: 'Expenses',\r\n              data: dataSource.datasets[0].expense,\r\n              borderColor: 'rgba(255, 0, 0, 0.8)',\r\n              backgroundColor: 'rgba(255, 0, 0, 0.2)',\r\n              borderWidth: 2,\r\n              fill: '-1',\r\n            },\r\n            {\r\n              label: 'Amount Difference',\r\n              data: amountDifference,\r\n              borderColor: 'rgba(0, 0, 255, 0.8)',\r\n              backgroundColor: 'rgba(0, 0, 255, 0.2)',\r\n              borderWidth: 2,\r\n              fill: '-1',\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            x: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Months',\r\n              },\r\n            },\r\n            y: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Amount',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n    };\r\n  };\r\n};\r\n    \r\n    useEffect(() => {\r\n      createPieChart(); // Call the pie chart creation function\r\n    }, [selectedMonth, dataSource]);\r\n\r\n    const getBudget = () => {\r\n      axios\r\n        .get(`http://localhost:3000/api/budget/${username}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then(function (res) {\r\n          console.log(res.data);\r\n          for (var i = 0; i < res.data.length; i++) {\r\n            dataSource.datasets[0].data[i] = res.data[i].budget;\r\n            dataSource.labels[i] = res.data[i].title;\r\n            dataSource.datasets[0].backgroundColor[i] = res.data[i].color;\r\n            dataSource.datasets[0].expense[i] = res.data[i].expense;\r\n            dataSource.datasets[0].month[i] = res.data[i].month;\r\n          }\r\n          createChart();\r\n          createStackedLineChart();\r\n        })\r\n        .catch(function (error) {\r\n          console.error('Error fetching budget data:', error);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n      getBudget();\r\n    }, []);\r\n\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <section className=\"dash-head\">\r\n          <h1 className=\"dashboard-head\">Welcome to <b>{username}'s </b>Dashboard</h1>\r\n          <Link to=\"/newcategory\" className=\"create-category\">\r\n            Add new categories\r\n          </Link>\r\n          <Link to=\"/login\" className=\"logout-link\">\r\n            Logout\r\n          </Link>\r\n        </section>\r\n        <section className=\"charts\">\r\n  <article className=\"chart chart1\">\r\n    <h3>Budget and Expenses based on Category for {selectedMonth}</h3>\r\n    <label>\r\n        <select value={selectedMonth} onChange={handleChange}>\r\n          <option value={''} disabled hidden>\r\n            Select a month\r\n          </option>\r\n          {options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n    <div>\r\n      <canvas id=\"myChart\"> </canvas>\r\n    </div>\r\n  </article>\r\n  <article className=\"chart chart2\">\r\n    <h3>All the expenses for <b>{selectedMonth}</b> </h3>\r\n    <div>\r\n      <label>\r\n        <select value={selectedMonth} onChange={handleChange}>\r\n          <option value={''} disabled hidden>\r\n            Select a month\r\n          </option>\r\n          {options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n      <div>\r\n        <canvas id=\"chart2\"> </canvas>\r\n      </div>\r\n    </div>\r\n  </article>\r\n  <article className=\"chart chart3\">\r\n    <h3>Line chart</h3>\r\n    <div>\r\n      <canvas id=\"chart3\"> </canvas>\r\n    </div>\r\n  </article>\r\n</section>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}